{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "instruction",
  "steps": [
    {
      "title": "page1",
      "description": "Action: ターミナルで以下のコマンドを実行してください。クリックするだけで実行できます。\n\n>> npm init -yes\n\nResult: `package.json` が生成されます\n\nAction: 以下のコマンドを入力してください。\n\n>> npm install typescript\n\nAction: 以下のコマンドを入力してください。\n\n>> npx tsc -init\n\nResult: `tsconfig.json` が生成されます\n\nこれでTypeScriptを実行する環境が整いました。次の数アクションで簡単なTypeScriptコードを実行してみます。\n\nAction: 以下のコマンドを入力してください。\n\n>> cp answers/index0.ts index.ts\n\nResult: コピーされたファイルは以下のとおりです。\n\n```\nexport const s: string = \"hello world\";\nconsole.log(s);\n```\n\nTypeScriptをwatchして実行するための `ts-node-dev` を導入します。\n\nAction: 以下のコマンドを入力してください。\n\n>> npm install ts-node-dev\n\nAction: 以下のコマンドを入力してください。\n\n>> npm set-script start \"ts-node-dev --respawn index.ts\"\n\nAction: 以下のコマンドを入力してください。\n\n>> npm run start\n\nResult: 以下のように表示されます。\n\n```\n> start\n> ts-node-dev --respawn index.ts\n\n[INFO] 14:12:04 ts-node-dev ver. 1.1.8 (using ts-node ver. 9.1.1, typescript ver. 4.5.4)\nhello world\n```\n\nAction: 以下のコマンドを入力してください。\n\n>> cp answers/index1.ts index.ts\n\nResult: 以下のように表示されます。\n\n```\n[INFO] 14:15:33 Restarting: /workspaces/apollo-server-tutorial/index.ts has been modified\ngood morning world\n```\n\nここまでで、簡単なTypeScriptコードををwatchして実行できました。コードを書き換えたらすぐにサーバーを再起動してくれるので、apollo serverの開発が快適になります。\n\n(注意)次のステップを実行すると別画面へ飛びます。\n\nAction: 下画像のようにVS CodeのSource Controlからファイルの差分を確認してください。ただし、迷子にならないようCodeTourに戻ってくる方法を確認してからSource Controlに飛んでください。\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/75738/e031b7a1-66e0-6d12-84c1-49de9eab1f85.png)\n\nAction: Ctrl+Cでターミナルの`npm run start`を停止してください。\n\nAction: 以下のコマンドを入力してください。\n\n>> git add --all && git commit -m \"page 1 done\"\n\n適宜 git commit すると、各Actionの差分がわかりやすくなります"
    }
  ]
}